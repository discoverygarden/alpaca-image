name: Build all images

permissions:
  id-token: write
  contents: read
on:
  push:
    branches: [ main ]
    paths:
     - 'images/**/VERSION'
  pull_request:
    branches: [ main ]
    paths:
      - 'images/**'
  schedule:
    - cron: '47 4 1 * *'

jobs:
  activemq:
    uses: ./.github/workflows/build-image.yml
    with:
      image-name: activemq
      scheduled: ${{ github.event_name == "schedule" }}
  alpaca:
    uses: ./.github/workflows/build-image.yml
    if: github.event_name != "schedule"
    with:
      image-name: alpaca
      scheduled: ${{ github.event_name == "schedule" }}
  cantaloupe:
    uses: ./.github/workflows/build-image.yml
    with:
      image-name: cantaloupe
      scheduled: ${{ github.event_name == "schedule" }}
  crayfish:
    uses: ./.github/workflows/build-image.yml
    with:
      image-name: crayfish
      scheduled: ${{ github.event_name == "schedule" }}
  drupal-base:
    uses: ./.github/workflows/build-image.yml
    with:
      image-name: drupal-base
      scheduled: ${{ github.event_name == "schedule" }}
  drupal-base-dev:
    uses: ./.github/workflows/build-image.yml
    if: needs.drupal-base.outputs.updated == 'true' || github.event_name = "schedule"
    with:
      image-name: drupal-base
      upstream-updated: ${{ needs.drupal-base.outputs.updated }}
      build-args: |
        "BASE_IMAGE=${{ vars.DOCKER_REGISTRY_URL }}/drupal-base@${{ fromJSON(needs.drupal-base.outputs.image-info).digest }}"
      scheduled: ${{ github.event_name == "schedule" }}
      image-flavor: |
        suffix=-dev,onlatest=true
    needs: drupal-base
  memcached:
    uses: ./.github/workflows/build-image.yml
    with:
      image-name: memcached
      scheduled: ${{ github.event_name == "schedule" }}
  solr:
    uses: ./.github/workflows/build-image.yml
    if: github.event_name != "schedule"
    with:
      image-name: solr
  solr-ctda:
    uses: ./.github/workflows/build-image.yml
    if: github.event_name != "schedule"
    with:
      image-name: solr-ctda
      # use updated solr image if available, else pass empty string to use the default base image in the Dockerfile
      build-args: |
        "${{ needs.solr.outputs.updated == 'true' && format('BASE_IMAGE={0}/solr@{1}', vars.DEV_DOCKER_REGISTRY_URL, fromJson(needs.solr.outputs.image-info).digest) || '' }}"
    needs: solr
